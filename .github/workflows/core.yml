name: build and publish

on:
  push:
    branches: core

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: pnpm/action-setup@v4
        with: { version: 9 }
      - run: pnpm install
      - run: pnpm run lint
      - run: pnpm run build
  npmjs:
    name: "publish: npmjs.org"
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with: { version: 9 }
      - uses: actions/setup-node@v4
        with:
          registry-url: 'https://registry.npmjs.org'
          node-version: 22
          cache: pnpm
      - name: build and publish
        run: |
          set -x
          pnpm install
          pnpm run build
          find .
          v_published="$(pnpm view @so-dang-cool/sleep --json | jq -r '.["dist-tags"].latest')"
          v_now="$(jq -r '.version' <package.json)"
          if [ $v_published = $v_now ]
          then
            echo "version $v_now is already published"
          else
            pnpm publish \
              --access public \
              --publish-branch core \
              --provenance
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
  jsr:
    name: "publish: jsr.io"
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: denoland/setup-deno@v2
        with: { deno-version: v2.x }
      - run: deno publish
